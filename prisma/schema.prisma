// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String   @db.VarChar(255)
  email     String   @db.VarChar(255)
  password  String   @db.VarChar(255)
  balance   Decimal  @default(0) @db.Decimal(15, 2)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  paidTransactions     Transaction[] @relation("payer")
  receivedTransactions Transaction[] @relation("payee")

  @@unique([email])
}

enum StatusTransaction {
  pending
  completed
  reversed
  failed
}

enum StatusMotiveTransaction {
  INSUFFICIENT_BALANCE
}

enum TypeTransaction {
  deposit
  transfer
  chargeback
}

model Transaction {
  id                 String                   @id @default(cuid())
  type               TypeTransaction          @default(transfer)
  status             StatusTransaction        @default(pending)
  statusMotive       StatusMotiveTransaction?
  amount             Decimal                  @db.Decimal(15, 2)
  payerBalanceBefore Decimal                  @db.Decimal(15, 2)
  payerBalanceAfter  Decimal                  @db.Decimal(15, 2)
  createdAt          DateTime                 @default(now())
  updatedAt          DateTime                 @updatedAt

  payerId String?
  payer   User?   @relation("payer", fields: [payerId], references: [id])

  payeeId String?
  payee   User?   @relation("payee", fields: [payeeId], references: [id])

  chargeBackTransactionId String?
  chargeBackTransaction   Transaction? @relation("chargeBack")

  reversedTransactionId String?      @unique
  reversedTransaction   Transaction? @relation("chargeBack", fields: [reversedTransactionId], references: [id])
}
